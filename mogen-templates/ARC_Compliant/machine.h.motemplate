// DO NOT EDIT. This file is machine-generated and constantly overwritten.
// Make changes to <$managedObjectClassName$>.h instead.

#import <CoreData/CoreData.h>
<$if hasCustomSuperentity$>#import "<$customSuperentity$>.h"
<$endif$>
// NON-INHERITED ATTRIBUTES<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasTransformableAttributeType$>
@class <$Attribute.objectAttributeType$>;<$endif$><$endforeach do$>

// NON-INHERITED RELATIONSHIPS<$foreach Relationship noninheritedRelationships do$>
@class <$Relationship.destinationEntity.managedObjectClassName$>;<$endforeach do$>

@interface <$managedObjectClassName$>ID : NSManagedObjectID {}
@end

@interface _<$managedObjectClassName$> : <$customSuperentity$> {}
+ (NSString *)entityName;
<$foreach Attribute noninheritedAttributes do$>+ (NSString *)<$Attribute.name$>Key;
<$endforeach do$><$foreach Relationship noninheritedRelationships do$>+ (NSString *)<$Relationship.name$>Key;
<$endforeach do$><$foreach FetchedProperty noninheritedFetchedProperties do$>+ (NSString *)<$FetchedProperty.name$>Key;
<$endforeach do$>
+ (id)create<$name$>InMOC:(NSManagedObjectContext *)moc_<$foreach Attribute attributesByName do$><$if !Attribute.isOptional$> <$Attribute.name$>:(<$Attribute.objectAttributeType$> *)<$Attribute.name$>_<$endif$><$endforeach do$><$foreach Relationship relationshipsByName do$><$if !Relationship.isOptional$> <$Relationship.name$>:(<$if Relationship.isToMany$>NSSet<$endif$><$if !Relationship.isToMany$><$Relationship.destinationEntity.managedObjectClassName$><$endif$> *)<$Relationship.name$>_<$endif$><$endforeach do$>;
+ (NSEntityDescription *)entityInMOC:(NSManagedObjectContext *)moc_;

- (id)initInMOC:(NSManagedObjectContext *)moc_ <$foreach Attribute attributesByName do$><$if !Attribute.isOptional$><$Attribute.name$>:(<$Attribute.objectAttributeType$> *)<$Attribute.name$>_ <$endif$><$endforeach do$><$foreach Relationship relationshipsByName do$><$if !Relationship.isOptional$><$Relationship.name$>:(<$if Relationship.isToMany$>NSSet<$endif$><$if !Relationship.isToMany$><$Relationship.destinationEntity.managedObjectClassName$><$endif$> *)<$Relationship.name$>_ <$endif$><$endforeach do$>;
- (<$managedObjectClassName$>ID *)objectID;

// ATTRIBUTES<$foreach Attribute noninheritedAttributes do$>
<$if Attribute.hasDefinedAttributeType$>@property (nonatomic, strong) <$Attribute.objectAttributeType$> *<$Attribute.name$>;<$if Attribute.hasScalarAttributeType$>
@property <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;
- (<$Attribute.scalarAttributeType$>)<$Attribute.name$>Value;
- (void)set<$Attribute.name.initialCapitalString$>Value:(<$Attribute.scalarAttributeType$>)<$Attribute.name$>_;<$endif$>
//- (BOOL)validate<$Attribute.name.initialCapitalString$>:(id *)value_ error:(NSError**)error_;
<$endif$><$endforeach do$>

// RELATIONSHIPS<$foreach Relationship noninheritedRelationships do$>
<$if Relationship.isToMany$>@property (nonatomic, strong) NSSet * <$Relationship.name$>;
- (NSMutableSet *)<$Relationship.name$>Set;<$else$>@property (nonatomic, strong) <$Relationship.destinationEntity.managedObjectClassName$> * <$Relationship.name$>;
//- (BOOL)validate<$Relationship.name.initialCapitalString$>:(id *)value_ error:(NSError**)error_;<$endif$>
<$endforeach do$><$foreach FetchRequest prettyFetchRequests do$><$if FetchRequest.singleResult$>
+ (id)fetch<$FetchRequest.name.initialCapitalString$>:(NSManagedObjectContext *)moc_ <$foreach Binding FetchRequest.bindings do2$><$Binding.name$>:(<$Binding.type$>)<$Binding.name$>_ <$endforeach do2$>;
+ (id)fetch<$FetchRequest.name.initialCapitalString$>:(NSManagedObjectContext *)moc_ <$foreach Binding FetchRequest.bindings do2$><$Binding.name$>:(<$Binding.type$>)<$Binding.name$>_ <$endforeach do2$>error:(NSError**)error_;<$else$>
+ (NSArray *)fetch<$FetchRequest.name.initialCapitalString$>:(NSManagedObjectContext *)moc_ <$foreach Binding FetchRequest.bindings do2$><$Binding.name$>:(<$Binding.type$>)<$Binding.name$>_ <$endforeach do2$>;
+ (NSArray *)fetch<$FetchRequest.name.initialCapitalString$>:(NSManagedObjectContext *)moc_ <$foreach Binding FetchRequest.bindings do2$><$Binding.name$>:(<$Binding.type$>)<$Binding.name$>_ <$endforeach do2$>error:(NSError**)error_;<$endif$>
<$endforeach do$><$foreach FetchedProperty noninheritedFetchedProperties do$>
@property (weak, nonatomic, readonly) NSArray *<$FetchedProperty.name$>;
<$endforeach do$>
@end

@interface _<$managedObjectClassName$> (CoreDataGeneratedAccessors)

// RELATIONSHIPS<$foreach Relationship noninheritedRelationships do$><$if Relationship.isToMany$>
- (void)add<$Relationship.name.initialCapitalString$>:(NSSet *)value_;
- (void)remove<$Relationship.name.initialCapitalString$>:(NSSet *)value_;
- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$> *)value_;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$> *)value_;<$endif$><$endforeach do$>
@end

@interface _<$managedObjectClassName$> (CoreDataGeneratedPrimitiveAccessors)

// ATTRIBUTES<$foreach Attribute noninheritedAttributes do$>
- (<$Attribute.objectAttributeType$> *)primitive<$Attribute.name.initialCapitalString$>;
- (void)setPrimitive<$Attribute.name.initialCapitalString$>:(<$Attribute.objectAttributeType$> *)value;<$if Attribute.hasScalarAttributeType$>
- (<$Attribute.scalarAttributeType$>)primitive<$Attribute.name.initialCapitalString$>Value;
- (void)setPrimitive<$Attribute.name.initialCapitalString$>Value:(<$Attribute.scalarAttributeType$>)value_;<$endif$>
<$endforeach do$>
// RELATIONSHIPS<$foreach Relationship noninheritedRelationships do$>
<$if Relationship.isToMany$>- (NSMutableSet *)primitive<$Relationship.name.initialCapitalString$>;
- (void)setPrimitive<$Relationship.name.initialCapitalString$>:(NSMutableSet *)value;<$else$>- (<$Relationship.destinationEntity.managedObjectClassName$> *)primitive<$Relationship.name.initialCapitalString$>_;
- (void)setPrimitive<$Relationship.name.initialCapitalString$>:(<$Relationship.destinationEntity.managedObjectClassName$> *)value_;<$endif$>
<$endforeach do$>
@end
